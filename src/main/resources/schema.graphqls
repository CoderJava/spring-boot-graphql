type Query {
    bookById(id: ID): Book
    profileById(id: Int): Profile
    profileByEmail(email: String): Profile
    profileByName(name: String): [Profile]
    allProfile: [Profile]
}

type Book {
    id: ID
    name: String
    pageCount: Int
    author: Author
}

type Author {
    id: ID
    firstName: String
    lastName: String
}

type Profile {
    id: ID
    name: String
    email: String
    age: Int
}

type ResponseGeneral {
    status: Boolean
    message: String
}

type Mutation {
    createProfile(input: CreateProfileInput): Profile
    editProfile(input: EditProfileInput): ResponseGeneral
    deleteProfile(input: Int): ResponseGeneral
}

input CreateProfileInput {
    name: String
    email: String
    age: Int
}

input EditProfileInput {
    id: Int
    name: String
    email: String
    age: Int
}